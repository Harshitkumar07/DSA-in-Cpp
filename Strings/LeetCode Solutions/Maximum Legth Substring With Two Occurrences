** Leetcode Problem :- **



** Code :- **

class Solution {
public:
    int maximumLengthSubstring(string s) {
        int n = s.length(), left = 0, right = 0, count = INT_MIN;
        unordered_map<char, int> map;
        while (right < n) {
            if (map.find(s[right]) == map.end()) {
                map[s[right]]++;
                right++;
            } else if (map[s[right]] < 2) {
                map[s[right]]++;
                right++;
            } else {
                count = max(count, (right - left));
                left++;
                right = left;
                map.clear();
            }
        }
        count = max(count, right - left);
        return count;
    }
};

