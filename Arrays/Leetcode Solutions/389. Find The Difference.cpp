** Leetcode Problem 389 :- **

You are given two strings s and t.
String t is generated by random shuffling string s and then add one more letter at a random position.
Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"

** Code :- **

class Solution {
public:
    char findTheDifference(string s, string t) {
        char ans = 0;
        for (char ch : s) {
            ans ^= ch;
        }
        for (char ch : t) {
            ans ^= ch;
        }
        return ans;
    }
};

** Time Complexity :- **
    
Processing the Strings :
The algorithm iterates through both strings, s and t, using XOR operations to find the extra character.
XOR Operations :
Each character is XORed exactly once, and XOR operations take constant time O(1).
Total Time Complexity :
Since the algorithm performs O(n) + O(n+1) = O(n) operations, the overall time complexity is O(n).

** Space Complexity :- **
    
In-Place Computation :
The function only uses a single variable (ans), which is updated in-place using XOR.
Total Space Complexity :
Since no extra data structures are used, the space complexity remains O(1) in all cases.
