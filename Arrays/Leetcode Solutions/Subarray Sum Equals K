** Leetocde problem 560:- **



** Code :- 

class Solution {
public:
    int subarraySum(vector<int>& nums, int k) {
        int cnt = 0;
        vector<int> prefixSum(nums.size(), 0);
        prefixSum[0] = nums[0];
        for (int i = 1; i < nums.size(); i++) {
            prefixSum[i] = prefixSum[i - 1] + nums[i];
        }
        unordered_map<int, int> map;
        for (int j = 0; j < nums.size(); j++) {
            int val = prefixSum[j] - k;
            if (prefixSum[j] == k)
                cnt++;
            if (map.find(val) != map.end()) {
                cnt += map[val];
            }
            if (map.find(prefixSum[j]) == map.end()) {
                map[prefixSum[j]] == 0;
            }
            map[prefixSum[j]]++;
        }
        return cnt;
    }
};

